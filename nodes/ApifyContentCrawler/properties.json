[
	{
		"displayName": "Resource",
		"name": "resource",
		"type": "options",
		"noDataExpression": true,
		"options": [
			{
				"name": "Actors",
				"value": "Actors",
				"description": ""
			},
			{
				"name": "Actor tasks",
				"value": "Actor tasks",
				"description": ""
			},
			{
				"name": "Actor runs",
				"value": "Actor runs",
				"description": ""
			},
			{
				"name": "Datasets",
				"value": "Datasets",
				"description": ""
			}
		],
		"default": ""
	},
	{
		"displayName": "Operation",
		"name": "operation",
		"type": "options",
		"noDataExpression": true,
		"displayOptions": {
			"show": {
				"resource": ["Actors"]
			}
		},
		"options": [
			{
				"name": "Get list of actors",
				"value": "Get list of actors",
				"action": "Get list of actors",
				"description": "Gets the list of all Actors that the user created or used  The response is a list of objects  where each object contains a basic information about a single Actor  To only get Actors created by the user  add the my 1 query parameter  The endpoint supports pagination using the limit and offset parameters and it will not return more than 1000 records  By default  the records are sorted by the createdAt field in ascending order  therefore you can use pagination to incrementally fetch all Actors while new ones are still being created  To sort the records in descending order  use the desc 1 parameter",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/acts"
					}
				}
			},
			{
				"name": "Create actor",
				"value": "Create actor",
				"action": "Create actor",
				"description": "Creates a new Actor with settings specified in an Actor object passed as JSON in the POST payload  The response is the full Actor object as returned by the Get Actor endpoint  The HTTP request must have the Content Type  application json HTTP header  The Actor needs to define at least one version of the source code  For more information  see Version object  If you want to make your Actor public using isPublic  true  you will need to provide the Actor s title and the categories under which that Actor will be classified in Apify Store  For this  it s best to use the constants from our apify shared js package",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/acts"
					}
				}
			},
			{
				"name": "Get actor",
				"value": "Get actor",
				"action": "Get actor",
				"description": "Gets an object that contains all the details about a specific Actor",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}"
					}
				}
			},
			{
				"name": "Update actor",
				"value": "Update actor",
				"action": "Update actor",
				"description": "Updates settings of an Actor using values specified by an Actor object passed as JSON in the POST payload  If the object does not define a specific property  its value will not be updated  The response is the full Actor object as returned by the Get Actor endpoint  The request needs to specify the Content Type  application json HTTP header  When providing your API authentication token  we recommend using the request s Authorization header  rather than the URL   More info   If you want to make your Actor public using isPublic  true  you will need to provide the Actor s title and the categories under which that Actor will be classified in Apify Store  For this  it s best to use the constants from our apify shared js package",
				"routing": {
					"request": {
						"method": "PUT",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}"
					}
				}
			},
			{
				"name": "Delete actor",
				"value": "Delete actor",
				"action": "Delete actor",
				"description": "Deletes an Actor",
				"routing": {
					"request": {
						"method": "DELETE",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}"
					}
				}
			},
			{
				"name": "Get list of runs",
				"value": "Get list of runs",
				"action": "Get list of runs",
				"description": "Gets the list of runs of a specific actor  The response is a list of objects  where each object contains basic information about a single actor run  The endpoint supports pagination using the limit and offset parameters and it will not return more than 1000 array elements  By default  the records are sorted by the startedAt field in ascending order  therefore you can use pagination to incrementally fetch all records while new ones are still being created  To sort the records in descending order  use desc 1 parameter  You can also filter runs by status  available statuses",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}/runs"
					}
				}
			},
			{
				"name": "Run actor",
				"value": "Run actor",
				"action": "Run actor",
				"description": "Runs an Actor and immediately returns without waiting for the run to finish  The POST payload including its Content Type header is passed as INPUT to the Actor  usually application json   The Actor is started with the default options  you can override them using various URL query parameters  The response is the Run object as returned by the Get run API endpoint  If you want to wait for the run to finish and receive the actual output of the Actor as the response  please use one of the Run Actor synchronously API endpoints instead  To fetch the Actor run results that are typically stored in the default dataset  you ll need to pass the ID received in the defaultDatasetId field received in the response JSON to the Get items API endpoint",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}/runs"
					}
				}
			},
			{
				"name": "With input",
				"value": "With input",
				"action": "With input",
				"description": "Runs a specific Actor and returns its output  The POST payload including its Content Type header is passed as INPUT to the Actor  usually application json   The HTTP response contains Actors OUTPUT record from its default key value store  The Actor is started with the default options  you can override them using various URL query parameters  If the Actor run exceeds 300 seconds  the HTTP response will have status 408  Request Timeout   Beware that it might be impossible to maintain an idle HTTP connection for a long period of time  due to client timeout or network conditions  Make sure your HTTP client is configured to have a long enough connection timeout  If the connection breaks  you will not receive any information about the run and its status  To run the Actor asynchronously  use the Run Actor API endpoint instead",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}/run-sync"
					}
				}
			},
			{
				"name": "Without input",
				"value": "Without input",
				"action": "Without input",
				"description": "Runs a specific Actor and returns its output  The run must finish in 300 seconds otherwise the API endpoint returns a timeout error  The Actor is not passed any input  Beware that it might be impossible to maintain an idle HTTP connection for a long period of time  due to client timeout or network conditions  Make sure your HTTP client is configured to have a long enough connection timeout  If the connection breaks  you will not receive any information about the run and its status  To run the Actor asynchronously  use the Run Actor API endpoint instead",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}/run-sync"
					}
				}
			},
			{
				"name": "Run actor synchronously with input and get dataset items",
				"value": "Run actor synchronously with input and get dataset items",
				"action": "Run actor synchronously with input and get dataset items",
				"description": "Runs a specific Actor and returns its dataset items  The POST payload including its Content Type header is passed as INPUT to the Actor  usually application json   The HTTP response contains the Actors dataset items  while the format of items depends on specifying dataset items  format parameter  You can send all the same options in parameters as the Get Dataset Items API endpoint  The Actor is started with the default options  you can override them using URL query parameters  If the Actor run exceeds 300 seconds  the HTTP response will return the 408 status code  Request Timeout   Beware that it might be impossible to maintain an idle HTTP connection for a long period of time  due to client timeout or network conditions  Make sure your HTTP client is configured to have a long enough connection timeout  If the connection breaks  you will not receive any information about the run and its status  To run the Actor asynchronously  use the Run Actor API endpoint instead",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}/run-sync-get-dataset-items"
					}
				}
			},
			{
				"name": "Run actor synchronously without input and get dataset items",
				"value": "Run actor synchronously without input and get dataset items",
				"action": "Run actor synchronously without input and get dataset items",
				"description": "Runs a specific actor and returns its dataset items  The run must finish in 300 seconds otherwise the API endpoint returns a timeout error  The actor is not passed any input  It allows to send all possible options in parameters from Get Dataset Items API endpoint  Beware that it might be impossible to maintain an idle HTTP connection for a long period of time  due to client timeout or network conditions  Make sure your HTTP client is configured to have a long enough connection timeout  If the connection breaks  you will not receive any information about the run and its status  To run the Actor asynchronously  use the Run Actor API endpoint instead",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}/run-sync-get-dataset-items"
					}
				}
			},
			{
				"name": "Get last run",
				"value": "Get last run",
				"action": "Get last run",
				"description": "This is not a single endpoint  but an entire group of endpoints that lets you to retrieve and manage the last run of given Actor or any of its default storages",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/acts/{{$parameter[\"actorId\"]}}/runs/last"
					}
				}
			}
		],
		"default": ""
	},
	{
		"displayName": "Operation",
		"name": "operation",
		"type": "options",
		"noDataExpression": true,
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"]
			}
		},
		"options": [
			{
				"name": "Get list of tasks",
				"value": "Get list of tasks",
				"action": "Get list of tasks",
				"description": "Gets the complete list of tasks that a user has created or used  The response is a list of objects in which each object contains essential information about a single task  The endpoint supports pagination using the limit and offset parameters  and it does not return more than a 1000 records  By default  the records are sorted by the createdAt field in ascending order  therefore you can use pagination to incrementally fetch all tasks while new ones are still being created  To sort the records in descending order  use the desc 1 parameter",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/actor-tasks"
					}
				}
			},
			{
				"name": "Create task",
				"value": "Create task",
				"action": "Create task",
				"description": "Create a new task with settings specified by the object passed as JSON in the POST payload  The response is the full task object as returned by the Get task endpoint  The request needs to specify the Content Type  application json HTTP header  When providing your API authentication token  we recommend using the request s Authorization header  rather than the URL   More info",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/actor-tasks"
					}
				}
			},
			{
				"name": "Get task",
				"value": "Get task",
				"action": "Get task",
				"description": "Get an object that contains all the details about a task",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}"
					}
				}
			},
			{
				"name": "Update task",
				"value": "Update task",
				"action": "Update task",
				"description": "Update settings of a task using values specified by an object passed as JSON in the POST payload  If the object does not define a specific property  its value is not updated  The response is the full task object as returned by the Get task endpoint  The request needs to specify the Content Type  application json HTTP header  When providing your API authentication token  we recommend using the request s Authorization header  rather than the URL   More info",
				"routing": {
					"request": {
						"method": "PUT",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}"
					}
				}
			},
			{
				"name": "Delete task",
				"value": "Delete task",
				"action": "Delete task",
				"description": "Delete the task specified through the actorTaskId parameter",
				"routing": {
					"request": {
						"method": "DELETE",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}"
					}
				}
			},
			{
				"name": "Get task input",
				"value": "Get task input",
				"action": "Get task input",
				"description": "Returns the input of a given task",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}/input"
					}
				}
			},
			{
				"name": "Update task input",
				"value": "Update task input",
				"action": "Update task input",
				"description": "Updates the input of a task using values specified by an object passed as JSON in the PUT payload  If the object does not define a specific property  its value is not updated  The response is the full task input as returned by the Get task input endpoint  The request needs to specify the Content Type  application json HTTP header  When providing your API authentication token  we recommend using the request s Authorization header  rather than the URL   More info",
				"routing": {
					"request": {
						"method": "PUT",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}/input"
					}
				}
			},
			{
				"name": "Get list of task runs",
				"value": "Get list of task runs",
				"action": "Get list of task runs",
				"description": "Get a list of runs of a specific task  The response is a list of objects  where each object contains essential information about a single task run  The endpoint supports pagination using the limit and offset parameters  and it does not return more than a 1000 array elements  By default  the records are sorted by the startedAt field in ascending order  therefore you can use pagination to incrementally fetch all records while new ones are still being created  To sort the records in descending order  use the desc 1 parameter  You can also filter runs by status  available statuses",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}/runs"
					}
				}
			},
			{
				"name": "Run task",
				"value": "Run task",
				"action": "Run task",
				"description": "Runs an actor task and immediately returns without waiting for the run to finish  Optionally  you can override the actor input configuration by passing a JSON object as the POST payload and setting the Content Type  application json HTTP header  Note that if the object in the POST payload does not define a particular input property  the actor run uses the default value defined by the task  or actor s input schema if not defined by the task   The response is the actor Run object as returned by the Get run endpoint  If you want to wait for the run to finish and receive the actual output of the actor run as the response  use one of the Run task synchronously API endpoints instead  To fetch the actor run results that are typically stored in the default dataset  you ll need to pass the ID received in the defaultDatasetId field received in the response JSON to the Get items API endpoint",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}/runs"
					}
				}
			},
			{
				"name": "Run task synchronously (POST)",
				"value": "Run task synchronously (POST)",
				"action": "Run task synchronously (POST)",
				"description": "Runs an actor task and synchronously returns its output  The run must finish in 300 seconds otherwise the HTTP request fails with a timeout error  this won t abort the run itself   Optionally  you can override the actor input configuration by passing a JSON object as the POST payload and setting the Content Type  application json HTTP header  Note that if the object in the POST payload does not define a particular input property  the actor run uses the default value defined by the task  or actor s input schema if not defined by the task   Beware that it might be impossible to maintain an idle HTTP connection for an extended period  due to client timeout or network conditions  Make sure your HTTP client is configured to have a long enough connection timeout  If the connection breaks  you will not receive any information about the run and its status  Input fields from actor task configuration can be overloaded with values passed as the POST payload  Just make sure to specify Content Type header to be application json and input to be an object  To run the task asynchronously  use the Run task API endpoint instead",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}/run-sync"
					}
				}
			},
			{
				"name": "Run task synchronously (GET)",
				"value": "Run task synchronously (GET)",
				"action": "Run task synchronously (GET)",
				"description": "Run a specific task and return its output  The run must finish in 300 seconds otherwise the HTTP request fails with a timeout error  this won t abort the run itself   Beware that it might be impossible to maintain an idle HTTP connection for an extended period  due to client timeout or network conditions  Make sure your HTTP client is configured to have a long enough connection timeout  If the connection breaks  you will not receive any information about the run and its status  To run the Task asynchronously  use the Run task asynchronously endpoint instead",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}/run-sync"
					}
				}
			},
			{
				"name": "Run task synchronously and get dataset items (POST)",
				"value": "Run task synchronously and get dataset items (POST)",
				"action": "Run task synchronously and get dataset items (POST)",
				"description": "Runs an actor task and synchronously returns its dataset items  The run must finish in 300 seconds otherwise the HTTP request fails with a timeout error  this won t abort the run itself   Optionally  you can override the actor input configuration by passing a JSON object as the POST payload and setting the Content Type  application json HTTP header  Note that if the object in the POST payload does not define a particular input property  the actor run uses the default value defined by the task  or the actor s input schema if not defined by the task   You can send all the same options in parameters as the Get Dataset Items API endpoint  Beware that it might be impossible to maintain an idle HTTP connection for an extended period  due to client timeout or network conditions  Make sure your HTTP client is configured to have a long enough connection timeout  If the connection breaks  you will not receive any information about the run and its status  Input fields from actor task configuration can be overloaded with values passed as the POST payload  Just make sure to specify the Content Type header as application json and that the input is an object  To run the task asynchronously  use the Run task API endpoint instead",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}/run-sync-get-dataset-items"
					}
				}
			},
			{
				"name": "Run task synchronously and get dataset items (GET)",
				"value": "Run task synchronously and get dataset items (GET)",
				"action": "Run task synchronously and get dataset items (GET)",
				"description": "Run a specific task and return its dataset items  The run must finish in 300 seconds otherwise the HTTP request fails with a timeout error  this won t abort the run itself   You can send all the same options in parameters as the Get Dataset Items API endpoint  Beware that it might be impossible to maintain an idle HTTP connection for an extended period  due to client timeout or network conditions  Make sure your HTTP client is configured to have a long enough connection timeout  If the connection breaks  you will not receive any information about the run and its status  To run the Task asynchronously  use the Run task asynchronously endpoint instead",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/actor-tasks/{{$parameter[\"actorTaskId\"]}}/run-sync-get-dataset-items"
					}
				}
			}
		],
		"default": ""
	},
	{
		"displayName": "Operation",
		"name": "operation",
		"type": "options",
		"noDataExpression": true,
		"displayOptions": {
			"show": {
				"resource": ["Actor runs"]
			}
		},
		"options": [
			{
				"name": "Get user runs list",
				"value": "Get user runs list",
				"action": "Get user runs list",
				"description": "Gets a list of all runs for a user  The response is a list of objects  where each object contains basic information about a single actor run  The endpoint supports pagination using the limit and offset parameters and it will not return more than 1000 array elements  By default  the records are sorted by the startedAt field in ascending order  Therefore  you can use pagination to incrementally fetch all records while new ones are still being created  To sort the records in descending order  use desc 1 parameter  You can also filter runs by status  available statuses",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/actor-runs"
					}
				}
			},
			{
				"name": "Get run",
				"value": "Get run",
				"action": "Get run",
				"description": "This is not a single endpoint  but an entire group of endpoints that lets you retrieve the run or any of its default storages  The endpoints accept the same HTTP methods and query parameters as the respective storage endpoints",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/actor-runs/{{$parameter[\"runId\"]}}"
					}
				}
			}
		],
		"default": ""
	},
	{
		"displayName": "Operation",
		"name": "operation",
		"type": "options",
		"noDataExpression": true,
		"displayOptions": {
			"show": {
				"resource": ["Datasets"]
			}
		},
		"options": [
			{
				"name": "Get list of datasets",
				"value": "Get list of datasets",
				"action": "Get list of datasets",
				"description": "Lists all of a user s datasets  The response is a JSON array of objects  where each object contains basic information about one dataset  By default  the objects are sorted by the createdAt field in ascending order  therefore you can use pagination to incrementally fetch all datasets while new ones are still being created  To sort them in descending order  use desc 1 parameter  The endpoint supports pagination using limit and offset parameters and it will not return more than 1000 array elements",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/datasets"
					}
				}
			},
			{
				"name": "Create dataset",
				"value": "Create dataset",
				"action": "Create dataset",
				"description": "Creates a dataset and returns its object  Keep in mind that data stored under unnamed dataset follows data retention period  It creates a dataset with the given name if the parameter name is used  If a dataset with the given name already exists then returns its object",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/datasets"
					}
				}
			},
			{
				"name": "Get dataset",
				"value": "Get dataset",
				"action": "Get dataset",
				"description": "Returns dataset object for given dataset ID  NOTE  Keep in mind that attributes itemCount and cleanItemCount are not propagated right away after data are pushed into a dataset  There is a short period  up to 5 seconds  during which these counters may not match with exact counts in dataset items",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/datasets/{{$parameter[\"datasetId\"]}}"
					}
				}
			},
			{
				"name": "Update dataset",
				"value": "Update dataset",
				"action": "Update dataset",
				"description": "Updates a dataset s name using a value specified by a JSON object passed in the PUT payload  The response is the updated dataset object  as returned by the Get dataset API endpoint",
				"routing": {
					"request": {
						"method": "PUT",
						"url": "=/v2/datasets/{{$parameter[\"datasetId\"]}}"
					}
				}
			},
			{
				"name": "Delete dataset",
				"value": "Delete dataset",
				"action": "Delete dataset",
				"description": "Deletes a specific dataset",
				"routing": {
					"request": {
						"method": "DELETE",
						"url": "=/v2/datasets/{{$parameter[\"datasetId\"]}}"
					},
					"output": {
						"postReceive": [
							{
								"type": "setKeyValue",
								"properties": {
									"data": "={{$response.body}}"
								}
							}
						]
					}
				}
			},
			{
				"name": "Get items",
				"value": "Get items",
				"action": "Get items",
				"description": "Returns data stored in the dataset in a desired format  Response format The format of the response depends on format query parameter  The format parameter can have one of the following values  json  jsonl  xml  html  csv  xlsx and rss  The following table describes how each format is treated  Note that CSV  XLSX and HTML tables are limited to 500 columns and the column names cannot be longer than 200 characters  JSON  XML and RSS formats do not have such restrictions  Hidden fields The top level fields starting with the   character are considered hidden  These are useful to store debugging information and can be omitted from the output by providing the skipHidden 1 or clean 1 query parameters  For example  if you store the following object to the dataset    productName   iPhone Xs   description   Welcome to the big screens    debug    url   https   www apple com lae iphone xs    crawledAt   2019 01 21T16 06 03 683Z      The  debug field will be considered as hidden and can be omitted from the results  This is useful to provide nice cleaned data to end users  while keeping debugging info available if needed  The Dataset object returned by the API contains the number of such clean items in thedataset cleanItemCount property  XML format extension When exporting results to XML or RSS formats  the names of object properties become XML tags and the corresponding values become tag s children  For example  the following JavaScript object    name   Paul Newman   address      type   home   street   21st   city   Chicago       type   office   street  null  city  null       will be transformed to the following XML snippet   name Paul Newman  name   address   type home  type   street 21st  street   city Chicago  city    address   address   type office  type   street    city     address  If the JavaScript object contains a property named   then its sub properties are exported as attributes of the parent XML element  If the parent XML element does not have any child elements then its value is taken from a JavaScript object property named    For example  the following JavaScript object     address              type    home      street    21st    city    Chicago               type    office           unknown       will be transformed to the following XML snippet   address type  home    street 21st  street   city Chicago  city    address   address type  office  unknown  address  This feature is also useful to customize your RSS feeds generated for various websites  By default the whole result is wrapped in a  items  element and each page object is wrapped in a  item  element  You can change this using xmlRoot and xmlRow url parameters  Pagination The generated response supports pagination  The pagination is always performed with the granularity of a single item  regardless whether unwind parameter was provided  By default  the Items in the response are sorted by the time they were stored to the database  therefore you can use pagination to incrementally fetch the items as they are being added  The maximum number of items that will be returned in a single API call is limited to 250 000  If you specify desc 1 query parameter  the results are returned in the reverse order than they were stored  i e  from newest to oldest items   Note that only the order of Items is reversed  but not the order of the unwind array elements",
				"routing": {
					"request": {
						"method": "GET",
						"url": "=/v2/datasets/{{$parameter[\"datasetId\"]}}/items"
					},
					"output": {
						"postReceive": [
							{
								"type": "setKeyValue",
								"properties": {
									"data": "={{$response.body}}"
								}
							}
						]
					}
				}
			},
			{
				"name": "Put items",
				"value": "Put items",
				"action": "Put items",
				"description": "Appends an item or an array of items to the end of the dataset  The POST payload is a JSON object or a JSON array of objects to save into the dataset  IMPORTANT  The limit of request payload size for the dataset is 5 MB  If the array exceeds the size  you ll need to split it into a number of smaller arrays",
				"routing": {
					"request": {
						"method": "POST",
						"url": "=/v2/datasets/{{$parameter[\"datasetId\"]}}/items"
					}
				}
			}
		],
		"default": ""
	},
	{
		"displayName": "GET /v2/acts",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of actors"]
			}
		}
	},
	{
		"displayName": "My",
		"name": "my",
		"description": "If `true` or `1` then the returned list only contains Actors owned by the user. The default value is `false`.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"my": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of actors"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of records that should be skipped at the start. The default value\nis `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of actors"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of records to return. The default value as well as the\nmaximum is `1000`.\n",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of actors"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "If `true` or `1` then the objects are sorted by the `createdAt` field in\ndescending order. By default, they are sorted in ascending order.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of actors"]
			}
		}
	},
	{
		"displayName": "POST /v2/acts",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Name",
		"name": "name",
		"type": "string",
		"default": "MyActor",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"name": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Description",
		"name": "description",
		"type": "string",
		"default": "My favourite actor!",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"description": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Title",
		"name": "title",
		"type": "string",
		"default": "My actor",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"title": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Is Public",
		"name": "isPublic",
		"type": "boolean",
		"default": false,
		"description": "",
		"routing": {
			"request": {
				"body": {
					"isPublic": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Seo Title",
		"name": "seoTitle",
		"type": "string",
		"default": "My actor",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"seoTitle": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Seo Description",
		"name": "seoDescription",
		"type": "string",
		"default": "My actor is the best",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"seoDescription": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Restart On Error",
		"name": "restartOnError",
		"type": "boolean",
		"default": false,
		"description": "",
		"routing": {
			"request": {
				"body": {
					"restartOnError": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Versions",
		"name": "versions",
		"type": "fixedCollection",
		"default": [],
		"typeOptions": {
			"multipleValues": true
		},
		"description": "",
		"placeholder": "Add item",
		"options": [
			{
				"name": "items",
				"displayName": "Items",
				"values": [
					{
						"type": "collection",
						"default": {},
						"typeOptions": {},
						"displayName": "Item",
						"name": "item",
						"description": "",
						"placeholder": "Add item",
						"options": [
							{
								"type": "string",
								"default": "0.0",
								"description": "",
								"name": "versionNumber",
								"displayName": "Versionnumber"
							},
							{
								"type": "string",
								"default": "",
								"description": "",
								"name": "sourceType",
								"displayName": "Sourcetype"
							},
							{
								"type": "fixedCollection",
								"default": [],
								"typeOptions": {
									"multipleValues": true
								},
								"displayName": "Envvars",
								"name": "envVars",
								"description": "",
								"placeholder": "Add item",
								"options": [
									{
										"name": "items",
										"displayName": "Items",
										"values": [
											{
												"type": "string",
												"default": "MY_ENV_VAR",
												"description": "",
												"name": "name",
												"displayName": "Name"
											},
											{
												"type": "string",
												"default": "my-value",
												"description": "",
												"name": "value",
												"displayName": "Value"
											},
											{
												"type": "boolean",
												"default": false,
												"description": "",
												"name": "isSecret",
												"displayName": "Issecret"
											}
										]
									}
								]
							},
							{
								"type": "boolean",
								"default": false,
								"description": "",
								"name": "applyEnvVarsToBuild",
								"displayName": "Applyenvvarstobuild"
							},
							{
								"type": "string",
								"default": "latest",
								"description": "",
								"name": "buildTag",
								"displayName": "Buildtag"
							},
							{
								"type": "json",
								"default": "[\n  {\n    \"format\": \"TEXT\",\n    \"content\": \"console.log('This is the main.js file');\",\n    \"name\": \"src/main.js\"\n  }\n]",
								"description": "",
								"name": "sourceFiles",
								"displayName": "Sourcefiles"
							}
						]
					}
				]
			}
		],
		"routing": {
			"request": {
				"body": {
					"versions": "={{$value.items}}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Categories",
		"name": "categories",
		"type": "fixedCollection",
		"default": [],
		"typeOptions": {
			"multipleValues": true
		},
		"description": "",
		"placeholder": "Add item",
		"options": [
			{
				"name": "items",
				"displayName": "Items",
				"values": [
					{
						"name": "Item",
						"displayName": "Item",
						"type": "string",
						"default": ""
					}
				]
			}
		],
		"routing": {
			"request": {
				"body": {
					"categories": "={{$value.items}}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Default Run Options",
		"name": "defaultRunOptions",
		"type": "string",
		"default": "",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"defaultRunOptions": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{\n  \"name\": \"MyActor\",\n  \"description\": \"My favourite actor!\",\n  \"title\": \"My actor\",\n  \"isPublic\": false,\n  \"seoTitle\": \"My actor\",\n  \"seoDescription\": \"My actor is the best\",\n  \"restartOnError\": false,\n  \"versions\": [\n    {\n      \"versionNumber\": \"0.0\",\n      \"sourceType\": {},\n      \"envVars\": [\n        {\n          \"name\": \"MY_ENV_VAR\",\n          \"value\": \"my-value\",\n          \"isSecret\": false\n        }\n      ],\n      \"applyEnvVarsToBuild\": false,\n      \"buildTag\": \"latest\",\n      \"sourceFiles\": [\n        {\n          \"format\": \"TEXT\",\n          \"content\": \"console.log('This is the main.js file');\",\n          \"name\": \"src/main.js\"\n        },\n        {\n          \"name\": \"src/placeholder\",\n          \"folder\": true\n        }\n      ]\n    }\n  ],\n  \"categories\": [\n    \"string\"\n  ],\n  \"defaultRunOptions\": {}\n}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actors"],
				"operation": ["Create actor"]
			}
		}
	},
	{
		"displayName": "GET /v2/acts/{actorId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get actor"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get actor"]
			}
		}
	},
	{
		"displayName": "PUT /v2/acts/{actorId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Name",
		"name": "name",
		"type": "string",
		"default": "MyActor",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"name": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "Description",
		"name": "description",
		"type": "string",
		"default": "My favourite actor!",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"description": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Is Public",
		"name": "isPublic",
		"type": "boolean",
		"default": false,
		"description": "",
		"routing": {
			"request": {
				"body": {
					"isPublic": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "Seo Title",
		"name": "seoTitle",
		"type": "string",
		"default": "My actor",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"seoTitle": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "Seo Description",
		"name": "seoDescription",
		"type": "string",
		"default": "My actor is the best",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"seoDescription": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "Title",
		"name": "title",
		"type": "string",
		"default": "My Actor",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"title": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "Restart On Error",
		"name": "restartOnError",
		"type": "boolean",
		"default": false,
		"description": "",
		"routing": {
			"request": {
				"body": {
					"restartOnError": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Versions",
		"name": "versions",
		"type": "fixedCollection",
		"default": [],
		"typeOptions": {
			"multipleValues": true
		},
		"description": "",
		"placeholder": "Add item",
		"options": [
			{
				"name": "items",
				"displayName": "Items",
				"values": [
					{
						"type": "string",
						"default": "MY_ENV_VAR",
						"description": "",
						"name": "name",
						"displayName": "Name"
					},
					{
						"type": "string",
						"default": "my-new-value",
						"description": "",
						"name": "value",
						"displayName": "Value"
					},
					{
						"type": "boolean",
						"default": false,
						"description": "",
						"name": "isSecret",
						"displayName": "Issecret"
					}
				]
			}
		],
		"routing": {
			"request": {
				"body": {
					"versions": "={{$value.items}}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "Categories",
		"name": "categories",
		"type": "fixedCollection",
		"default": [],
		"typeOptions": {
			"multipleValues": true
		},
		"description": "",
		"placeholder": "Add item",
		"options": [
			{
				"name": "items",
				"displayName": "Items",
				"values": [
					{
						"name": "Item",
						"displayName": "Item",
						"type": "string",
						"default": ""
					}
				]
			}
		],
		"routing": {
			"request": {
				"body": {
					"categories": "={{$value.items}}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "Default Run Options",
		"name": "defaultRunOptions",
		"type": "string",
		"default": "",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"defaultRunOptions": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{\n  \"name\": \"MyActor\",\n  \"description\": \"My favourite actor!\",\n  \"isPublic\": false,\n  \"seoTitle\": \"My actor\",\n  \"seoDescription\": \"My actor is the best\",\n  \"title\": \"My Actor\",\n  \"restartOnError\": false,\n  \"versions\": [\n    {\n      \"name\": \"MY_ENV_VAR\",\n      \"value\": \"my-new-value\",\n      \"isSecret\": false\n    }\n  ],\n  \"categories\": [\n    \"string\"\n  ],\n  \"defaultRunOptions\": {}\n}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actors"],
				"operation": ["Update actor"]
			}
		}
	},
	{
		"displayName": "DELETE /v2/acts/{actorId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Delete actor"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Delete actor"]
			}
		}
	},
	{
		"displayName": "GET /v2/acts/{actorId}/runs",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of runs"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of runs"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of array elements that should be skipped at the start. The\ndefault value is `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of runs"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of array elements to return. The default value as well as\nthe maximum is `1000`.\n",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of runs"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "If `true` or `1` then the objects are sorted by the `startedAt` field in\ndescending order. By default, they are sorted in ascending order.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of runs"]
			}
		}
	},
	{
		"displayName": "Status",
		"name": "status",
		"description": "Return only runs with the provided status ([available\nstatuses](https://docs.apify.com/platform/actors/running/runs-and-builds#lifecycle))\n",
		"default": "SUCCEEDED",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"status": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get list of runs"]
			}
		}
	},
	{
		"displayName": "POST /v2/acts/{actorId}/runs",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the default run configuration for the Actor.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the default run configuration for the Actor.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the Actor run should return. This is\nuseful for pay-per-result Actors, as it allows you to limit the number\nof results that will be charged to your subscription. You can access the\nmaximum number of items in your Actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the Actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the default run\nconfiguration for the Actor (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor"]
			}
		}
	},
	{
		"displayName": "Wait For Finish",
		"name": "waitForFinish",
		"description": "The maximum number of seconds the server waits for the run to finish. By\ndefault, it is `0`, the maximum value is `60`. <!--\nMAX_ACTOR_JOB_ASYNC_WAIT_SECS -->\nIf the build finishes in time then the returned run object will have a terminal status (e.g. `SUCCEEDED`),\notherwise it will have a transitional status (e.g. `RUNNING`).\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"waitForFinish": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the Actor run, which can be\nused to receive a notification e.g. when the Actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks. For more information, see\n[Webhooks documentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actors"],
				"operation": ["Run actor"]
			}
		}
	},
	{
		"displayName": "POST /v2/acts/{actorId}/run-sync",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["With input"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["With input"]
			}
		}
	},
	{
		"displayName": "Output Record Key",
		"name": "outputRecordKey",
		"description": "Key of the record from run's default key-value store to be returned\n                                             in the response. By default, it is `OUTPUT`.",
		"default": "OUTPUT",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"outputRecordKey": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["With input"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the default run configuration for the Actor.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["With input"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the default run configuration for the Actor.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["With input"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the Actor run should return. This is\nuseful for pay-per-result Actors, as it allows you to limit the number\nof results that will be charged to your subscription. You can access the\nmaximum number of items in your Actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["With input"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the Actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the default run\nconfiguration for the Actor (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["With input"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the Actor run, which can be\nused to receive a notification\n\ne.g. when the Actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks. For more information, see\n\n[Webhooks\ndocumentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["With input"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actors"],
				"operation": ["With input"]
			}
		}
	},
	{
		"displayName": "GET /v2/acts/{actorId}/run-sync",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Without input"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Without input"]
			}
		}
	},
	{
		"displayName": "Output Record Key",
		"name": "outputRecordKey",
		"description": "Key of the record from run's default key-value store to be returned\n                                             in the response. By default, it is `OUTPUT`.",
		"default": "OUTPUT",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"outputRecordKey": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Without input"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the default run configuration for the Actor.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Without input"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the default run configuration for the Actor.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Without input"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the Actor run should return. This is\nuseful for pay-per-result Actors, as it allows you to limit the number\nof results that will be charged to your subscription. You can access the\nmaximum number of items in your Actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Without input"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the Actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the default run\nconfiguration for the Actor (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Without input"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the Actor run, which can be\nused to receive a notification\n\ne.g. when the Actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks. For more information, see\n\n[Webhooks\ndocumentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Without input"]
			}
		}
	},
	{
		"displayName": "POST /v2/acts/{actorId}/run-sync-get-dataset-items",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the default run configuration for the Actor.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the default run configuration for the Actor.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the Actor run should return. This is\nuseful for pay-per-result Actors, as it allows you to limit the number\nof results that will be charged to your subscription. You can access the\nmaximum number of items in your Actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the Actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the default run\nconfiguration for the Actor (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the Actor run, which can be\nused to receive a notification\n\ne.g. when the Actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks. For more information, see\n\n[Webhooks\ndocumentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Format",
		"name": "format",
		"description": "Format of the results, possible values are: `json`, `jsonl`, `csv`,\n`html`, `xlsx`, `xml` and `rss`. The default value is `json`.\n",
		"default": "json",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"format": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Clean",
		"name": "clean",
		"description": "If `true` or `1` then the API endpoint returns only non-empty items and\nskips hidden fields\n\n(i.e. fields starting with the # character).\n\nThe `clean` parameter is just a shortcut for `skipHidden=true` and\n`skipEmpty=true` parameters.\n\nNote that since some objects might be skipped from the output, that the\nresult might contain less items than the `limit` value.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"clean": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of items that should be skipped at the start. The default value\nis `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of items to return. By default there is no limit.",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Fields",
		"name": "fields",
		"description": "A comma-separated list of fields which should be picked from the items,\n\nonly these fields will remain in the resulting record objects.\n\nNote that the fields in the outputted items are sorted the same way as\nthey are specified in the `fields` query parameter.\n\nYou can use this feature to effectively fix the output format.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"fields": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Omit",
		"name": "omit",
		"description": "A comma-separated list of fields which should be omitted from the items.",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"omit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Unwind",
		"name": "unwind",
		"description": "A comma-separated list of fields which should be unwound, in order which\nthey should be processed. Each field should be either an array or an object.\n\nIf the field is an array then every element of\n\nthe array will become a separate record and merged with parent object.\n\nIf the unwound field is an object then it is merged with the parent\nobject\n\nIf the unwound field is missing or its value is neither an array nor an\nobject and therefore cannot be merged with a parent object then the item\ngets preserved as it is.\n\nNote that the unwound items ignore the `desc` parameter.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"unwind": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Flatten",
		"name": "flatten",
		"description": "A comma-separated list of fields which should transform nested objects\ninto flat structures.\n\nFor example, with `flatten=\"foo\"` the object `{\"foo\":{\"bar\": \"hello\"}}`\nis turned into `{\"foo.bar\": \"hello\"}`.\n\nThe original object with properties is replaced with the flattened\nobject.\n",
		"default": "myValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"flatten": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "By default, results are returned in the same order as they were stored.\nTo reverse the order, set this parameter to `true` or `1`.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Attachment",
		"name": "attachment",
		"description": "If `true` or `1` then the response will define the `Content-Disposition:\nattachment` header, forcing a web browser to download the file rather\nthan to display it. By default this header is not present.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"attachment": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Delimiter",
		"name": "delimiter",
		"description": "A delimiter character for CSV files, only used if `format=csv`. You\nmight need to URL-encode the character (e.g. use `%09` for tab or `%3B`\nfor semicolon). The default delimiter is a simple comma (`,`).\n",
		"default": ";",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"delimiter": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Bom",
		"name": "bom",
		"description": "All text responses are encoded in UTF-8 encoding. By default, the\n`format=csv` files are prefixed with\n\nthe UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html`\nand `rss` files are not.\n\nIf you want to override this default behavior, specify `bom=1` query\nparameter to include the BOM or `bom=0` to skip it.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"bom": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Xml Root",
		"name": "xmlRoot",
		"description": "Overrides default root element name of `xml` output. By default the root\nelement is `items`.\n",
		"default": "items",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRoot": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Xml Row",
		"name": "xmlRow",
		"description": "Overrides default element name that wraps each page or page function\nresult object in `xml` output. By default the element name is `item`.\n",
		"default": "item",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Skip Header Row",
		"name": "skipHeaderRow",
		"description": "If `true` or `1` then header row in the `csv` format is skipped.",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHeaderRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Skip Hidden",
		"name": "skipHidden",
		"description": "If `true` or `1` then hidden fields are skipped from the output,\ni.e. fields starting with the `#` character.",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHidden": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Skip Empty",
		"name": "skipEmpty",
		"description": "If `true` or `1` then empty items are skipped from the output.\n\nNote that if used, the results might contain less items than the limit\nvalue.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipEmpty": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Simplified",
		"name": "simplified",
		"description": "If `true` or `1` then, the endpoint applies the\n`fields=url,pageFunctionResult,errorInfo`\n\nand `unwind=pageFunctionResult` query parameters. This feature is used\nto emulate simplified results provided by the\n\nlegacy Apify Crawler product and it's not recommended to use it in new\nintegrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"simplified": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Skip Failed Pages",
		"name": "skipFailedPages",
		"description": "If `true` or `1` then, the all the items with errorInfo property will be\nskipped from the output.\n\nThis feature is here to emulate functionality of API version 1 used for\nthe legacy Apify Crawler product and it's not recommended to use it in\nnew integrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipFailedPages": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actors"],
				"operation": ["Run actor synchronously with input and get dataset items"]
			}
		}
	},
	{
		"displayName": "GET /v2/acts/{actorId}/run-sync-get-dataset-items",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the default run configuration for the Actor.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the default run configuration for the Actor.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the Actor run should return. This is\nuseful for pay-per-result Actors, as it allows you to limit the number\nof results that will be charged to your subscription. You can access the\nmaximum number of items in your Actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the Actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the default run\nconfiguration for the Actor (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the Actor run, which can be\nused to receive a notification\n\ne.g. when the Actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks. For more information, see\n\n[Webhooks\ndocumentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Format",
		"name": "format",
		"description": "Format of the results, possible values are: `json`, `jsonl`, `csv`,\n`html`, `xlsx`, `xml` and `rss`. The default value is `json`.\n",
		"default": "json",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"format": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Clean",
		"name": "clean",
		"description": "If `true` or `1` then the API endpoint returns only non-empty items and\nskips hidden fields\n\n(i.e. fields starting with the # character).\n\nThe `clean` parameter is just a shortcut for `skipHidden=true` and\n`skipEmpty=true` parameters.\n\nNote that since some objects might be skipped from the output, that the\nresult might contain less items than the `limit` value.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"clean": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of items that should be skipped at the start. The default value\nis `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of items to return. By default there is no limit.",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Fields",
		"name": "fields",
		"description": "A comma-separated list of fields which should be picked from the items,\n\nonly these fields will remain in the resulting record objects.\n\nNote that the fields in the outputted items are sorted the same way as\nthey are specified in the `fields` query parameter.\n\nYou can use this feature to effectively fix the output format.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"fields": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Omit",
		"name": "omit",
		"description": "A comma-separated list of fields which should be omitted from the items.",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"omit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Unwind",
		"name": "unwind",
		"description": "A comma-separated list of fields which should be unwound, in order which\nthey should be processed. Each field should be either an array or an object.\n\nIf the field is an array then every element of\n\nthe array will become a separate record and merged with parent object.\n\nIf the unwound field is an object then it is merged with the parent\nobject\n\nIf the unwound field is missing or its value is neither an array nor an\nobject and therefore cannot be merged with a parent object then the item\ngets preserved as it is.\n\nNote that the unwound items ignore the `desc` parameter.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"unwind": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Flatten",
		"name": "flatten",
		"description": "A comma-separated list of fields which should transform nested objects\ninto flat structures.\n\nFor example, with `flatten=\"foo\"` the object `{\"foo\":{\"bar\": \"hello\"}}`\nis turned into `{\"foo.bar\": \"hello\"}`.\n\nThe original object with properties is replaced with the flattened\nobject.\n",
		"default": "myValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"flatten": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "By default, results are returned in the same order as they were stored.\nTo reverse the order, set this parameter to `true` or `1`.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Attachment",
		"name": "attachment",
		"description": "If `true` or `1` then the response will define the `Content-Disposition:\nattachment` header, forcing a web browser to download the file rather\nthan to display it. By default this header is not present.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"attachment": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Delimiter",
		"name": "delimiter",
		"description": "A delimiter character for CSV files, only used if `format=csv`. You\nmight need to URL-encode the character (e.g. use `%09` for tab or `%3B`\nfor semicolon). The default delimiter is a simple comma (`,`).\n",
		"default": ";",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"delimiter": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Bom",
		"name": "bom",
		"description": "All text responses are encoded in UTF-8 encoding. By default, the\n`format=csv` files are prefixed with\n\nthe UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html`\nand `rss` files are not.\n\nIf you want to override this default behavior, specify `bom=1` query\nparameter to include the BOM or `bom=0` to skip it.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"bom": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Xml Root",
		"name": "xmlRoot",
		"description": "Overrides default root element name of `xml` output. By default the root\nelement is `items`.\n",
		"default": "items",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRoot": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Xml Row",
		"name": "xmlRow",
		"description": "Overrides default element name that wraps each page or page function\nresult object in `xml` output. By default the element name is `item`.\n",
		"default": "item",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Skip Header Row",
		"name": "skipHeaderRow",
		"description": "If `true` or `1` then header row in the `csv` format is skipped.",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHeaderRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Skip Hidden",
		"name": "skipHidden",
		"description": "If `true` or `1` then hidden fields are skipped from the output,\ni.e. fields starting with the `#` character.",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHidden": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Skip Empty",
		"name": "skipEmpty",
		"description": "If `true` or `1` then empty items are skipped from the output.\n\nNote that if used, the results might contain less items than the limit\nvalue.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipEmpty": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Simplified",
		"name": "simplified",
		"description": "If `true` or `1` then, the endpoint applies the\n`fields=url,pageFunctionResult,errorInfo`\n\nand `unwind=pageFunctionResult` query parameters. This feature is used\nto emulate simplified results provided by the\n\nlegacy Apify Crawler product and it's not recommended to use it in new\nintegrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"simplified": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "Skip Failed Pages",
		"name": "skipFailedPages",
		"description": "If `true` or `1` then, the all the items with errorInfo property will be\nskipped from the output.\n\nThis feature is here to emulate functionality of API version 1 used for\nthe legacy Apify Crawler product and it's not recommended to use it in\nnew integrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipFailedPages": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Run actor synchronously without input and get dataset items"]
			}
		}
	},
	{
		"displayName": "GET /v2/acts/{actorId}/runs/last",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get last run"]
			}
		}
	},
	{
		"displayName": "Actor Id",
		"name": "actorId",
		"required": true,
		"description": "Actor ID or a tilde-separated owner's username and Actor name.",
		"default": "janedoe~my-actor",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get last run"]
			}
		}
	},
	{
		"displayName": "Status",
		"name": "status",
		"description": "Filter for the run status.",
		"default": "SUCCEEDED",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"status": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actors"],
				"operation": ["Get last run"]
			}
		}
	},
	{
		"displayName": "GET /v2/actor-tasks",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of tasks"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of records that should be skipped at the start. The default value is `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of tasks"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of records to return. The default value as well as the maximum is `1000`.\n",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of tasks"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "If `true` or `1` then the objects are sorted by the `createdAt` field in\ndescending order. By default, they are sorted in ascending order.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of tasks"]
			}
		}
	},
	{
		"displayName": "POST /v2/actor-tasks",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Create task"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Act Id",
		"name": "actId",
		"type": "string",
		"default": "asADASadYvn4mBZmm",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"actId": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Create task"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Name",
		"name": "name",
		"type": "string",
		"default": "my-task",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"name": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Create task"]
			}
		}
	},
	{
		"displayName": "Options",
		"name": "options",
		"type": "string",
		"default": "",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"options": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Create task"]
			}
		}
	},
	{
		"displayName": "Input",
		"name": "input",
		"type": "string",
		"default": "",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"input": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Create task"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{\n  \"actId\": \"asADASadYvn4mBZmm\",\n  \"name\": \"my-task\",\n  \"options\": {\n    \"build\": \"latest\",\n    \"timeoutSecs\": 300,\n    \"memoryMbytes\": 128\n  },\n  \"input\": {\n    \"hello\": \"world\"\n  }\n}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actor tasks"],
				"operation": ["Create task"]
			}
		}
	},
	{
		"displayName": "GET /v2/actor-tasks/{actorTaskId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get task"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get task"]
			}
		}
	},
	{
		"displayName": "PUT /v2/actor-tasks/{actorTaskId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Id",
		"name": "id",
		"type": "string",
		"default": "ZxLNxrRaZrSjuhT9y",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"id": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"required": true,
		"displayName": "User Id",
		"name": "userId",
		"type": "string",
		"default": "BPWZBd7Z9c746JAnF",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"userId": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Act Id",
		"name": "actId",
		"type": "string",
		"default": "asADASadYvn4mBZmm",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"actId": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Name",
		"name": "name",
		"type": "string",
		"default": "my-task",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"name": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"displayName": "Username",
		"name": "username",
		"type": "string",
		"default": "janedoe",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"username": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Created At",
		"name": "createdAt",
		"type": "string",
		"default": "2018-10-26T07:23:14.855Z",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"createdAt": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Modified At",
		"name": "modifiedAt",
		"type": "string",
		"default": "2018-10-26T13:30:49.578Z",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"modifiedAt": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"displayName": "Removed At",
		"name": "removedAt",
		"type": "string",
		"default": "",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"removedAt": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"displayName": "Stats",
		"name": "stats",
		"type": "string",
		"default": "",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"stats": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"displayName": "Options",
		"name": "options",
		"type": "string",
		"default": "",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"options": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"displayName": "Input",
		"name": "input",
		"type": "string",
		"default": "",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"input": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{\n  \"id\": \"ZxLNxrRaZrSjuhT9y\",\n  \"userId\": \"BPWZBd7Z9c746JAnF\",\n  \"actId\": \"asADASadYvn4mBZmm\",\n  \"name\": \"my-task\",\n  \"username\": \"janedoe\",\n  \"createdAt\": \"2018-10-26T07:23:14.855Z\",\n  \"modifiedAt\": \"2018-10-26T13:30:49.578Z\",\n  \"removedAt\": \"string\",\n  \"stats\": {},\n  \"options\": {},\n  \"input\": {}\n}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actor tasks"],
				"operation": ["Update task"]
			}
		}
	},
	{
		"displayName": "DELETE /v2/actor-tasks/{actorTaskId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Delete task"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Delete task"]
			}
		}
	},
	{
		"displayName": "GET /v2/actor-tasks/{actorTaskId}/input",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get task input"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get task input"]
			}
		}
	},
	{
		"displayName": "PUT /v2/actor-tasks/{actorTaskId}/input",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task input"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Update task input"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actor tasks"],
				"operation": ["Update task input"]
			}
		}
	},
	{
		"displayName": "GET /v2/actor-tasks/{actorTaskId}/runs",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of task runs"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of task runs"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of array elements that should be skipped at the start. The default value is `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of task runs"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of array elements to return. The default value as well as the maximum is `1000`.\n",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of task runs"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "If `true` or `1` then the objects are sorted by the `startedAt` field in\ndescending order. By default, they are sorted in ascending order.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of task runs"]
			}
		}
	},
	{
		"displayName": "Status",
		"name": "status",
		"description": "Return only runs with the provided status ([available\nstatuses](https://docs.apify.com/platform/actors/running/runs-and-builds#lifecycle))\n",
		"default": "SUCCEEDED",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"status": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Get list of task runs"]
			}
		}
	},
	{
		"displayName": "POST /v2/actor-tasks/{actorTaskId}/runs",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the task settings.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the task settings.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the actor run should return. This is\nuseful for pay-per-result actors, as it allows you to limit the number\nof results that will be charged to your subscription. You can access the\nmaximum number of items in your actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the task\nsettings (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task"]
			}
		}
	},
	{
		"displayName": "Wait For Finish",
		"name": "waitForFinish",
		"description": "The maximum number of seconds the server waits for the run to finish. By\ndefault, it is `0`, the maximum value is `60`. <!--\nMAX_ACTOR_JOB_ASYNC_WAIT_SECS -->\n\nIf the build finishes in time then the returned run object will have a\nterminal status (e.g. `SUCCEEDED`),\n\notherwise it will have a transitional status (e.g. `RUNNING`).\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"waitForFinish": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the actor run, which can be\nused to receive a notification\n\ne.g. when the actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks.\n\n**Note**: if you already have a webhook set up for the actor or task,\nyou do not have to add it again here.\n\nFor more information, see [Webhooks documentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actor tasks"],
				"operation": ["Run task"]
			}
		}
	},
	{
		"displayName": "POST /v2/actor-tasks/{actorTaskId}/run-sync",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (POST)"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (POST)"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the task settings.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (POST)"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the task settings.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (POST)"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the task run should return. This is\nuseful for pay-per-result tasks, as it allows you to limit the number of\nresults that will be charged to your subscription. You can access the\nmaximum number of items in your actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (POST)"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the task\nsettings (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (POST)"]
			}
		}
	},
	{
		"displayName": "Output Record Key",
		"name": "outputRecordKey",
		"description": "Key of the record from run's default key-value store to be returned\nin the response. By default, it is `OUTPUT`.",
		"default": "OUTPUT",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"outputRecordKey": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (POST)"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the actor run, which can be\nused to receive a notification\n\ne.g. when the actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks. For more information, see\n\n[Webhooks\ndocumentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (POST)"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (POST)"]
			}
		}
	},
	{
		"displayName": "GET /v2/actor-tasks/{actorTaskId}/run-sync",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (GET)"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (GET)"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the task settings.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (GET)"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the task settings.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (GET)"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the task run should return. This is\nuseful for pay-per-result tasks, as it allows you to limit the number of\nresults that will be charged to your subscription. You can access the\nmaximum number of items in your actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (GET)"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the task\nsettings (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (GET)"]
			}
		}
	},
	{
		"displayName": "Output Record Key",
		"name": "outputRecordKey",
		"description": "Key of the record from run's default key-value store to be returned\nin the response. By default, it is `OUTPUT`.",
		"default": "OUTPUT",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"outputRecordKey": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (GET)"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the actor run, which can be\nused to receive a notification\n\ne.g. when the actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks. For more information, see\n\n[Webhooks\ndocumentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously (GET)"]
			}
		}
	},
	{
		"displayName": "POST /v2/actor-tasks/{actorTaskId}/run-sync-get-dataset-items",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the task settings.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the task settings.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the task run should return. This is\nuseful for pay-per-result tasks, as it allows you to limit the number of\nresults that will be charged to your subscription. You can access the\nmaximum number of items in your actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the task\nsettings (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the actor run, which can be\nused to receive a notification\n\ne.g. when the actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks. For more information, see\n\n[Webhooks\ndocumentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Format",
		"name": "format",
		"description": "Format of the results, possible values are: `json`, `jsonl`, `csv`,\n`html`, `xlsx`, `xml` and `rss`. The default value is `json`.\n",
		"default": "json",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"format": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Clean",
		"name": "clean",
		"description": "If `true` or `1` then the API endpoint returns only non-empty items and\nskips hidden fields\n\n(i.e. fields starting with the # character).\n\nThe `clean` parameter is just a shortcut for `skipHidden=true` and\n`skipEmpty=true` parameters.\n\nNote that since some objects might be skipped from the output, that the\nresult might contain less items than the `limit` value.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"clean": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of items that should be skipped at the start. The default value\nis `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of items to return. By default there is no limit.",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Fields",
		"name": "fields",
		"description": "A comma-separated list of fields which should be picked from the items,\n\nonly these fields will remain in the resulting record objects.\n\nNote that the fields in the outputted items are sorted the same way as\nthey are specified in the `fields` query parameter.\n\nYou can use this feature to effectively fix the output format.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"fields": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Omit",
		"name": "omit",
		"description": "A comma-separated list of fields which should be omitted from the items.",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"omit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Unwind",
		"name": "unwind",
		"description": "A comma-separated list of fields which should be unwound, in order which\nthey should be processed. Each field should be either an array or an object.\n\nIf the field is an array then every element of\n\nthe array will become a separate record and merged with parent object.\n\nIf the unwound field is an object then it is merged with the parent\nobject\n\nIf the unwound field is missing or its value is neither an array nor an\nobject and therefore cannot be merged with a parent object then the item\ngets preserved as it is.\n\nNote that the unwound items ignore the `desc` parameter.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"unwind": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Flatten",
		"name": "flatten",
		"description": "A comma-separated list of fields which should transform nested objects\ninto flat structures.\n\nFor example, with `flatten=\"foo\"` the object `{\"foo\":{\"bar\": \"hello\"}}`\nis turned into `{\"foo.bar\": \"hello\"}`.\n\nThe original object with properties is replaced with the flattened\nobject.\n",
		"default": "myValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"flatten": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "By default, results are returned in the same order as they were stored.\nTo reverse the order, set this parameter to `true` or `1`.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Attachment",
		"name": "attachment",
		"description": "If `true` or `1` then the response will define the `Content-Disposition:\nattachment` header, forcing a web browser to download the file rather\nthan to display it. By default this header is not present.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"attachment": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Delimiter",
		"name": "delimiter",
		"description": "A delimiter character for CSV files, only used if `format=csv`. You\nmight need to URL-encode the character (e.g. use `%09` for tab or `%3B`\nfor semicolon). The default delimiter is a simple comma (`,`).\n",
		"default": ";",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"delimiter": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Bom",
		"name": "bom",
		"description": "All text responses are encoded in UTF-8 encoding. By default, the\n`format=csv` files are prefixed with\n\nthe UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html`\nand `rss` files are not.\n\nIf you want to override this default behavior, specify `bom=1` query\nparameter to include the BOM or `bom=0` to skip it.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"bom": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Xml Root",
		"name": "xmlRoot",
		"description": "Overrides default root element name of `xml` output. By default the root\nelement is `items`.\n",
		"default": "items",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRoot": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Xml Row",
		"name": "xmlRow",
		"description": "Overrides default element name that wraps each page or page function\nresult object in `xml` output. By default the element name is `item`.\n",
		"default": "item",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Skip Header Row",
		"name": "skipHeaderRow",
		"description": "If `true` or `1` then header row in the `csv` format is skipped.",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHeaderRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Skip Hidden",
		"name": "skipHidden",
		"description": "If `true` or `1` then hidden fields are skipped from the output,\ni.e. fields starting with the `#` character.",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHidden": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Skip Empty",
		"name": "skipEmpty",
		"description": "If `true` or `1` then empty items are skipped from the output.\n\nNote that if used, the results might contain less items than the limit\nvalue.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipEmpty": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Simplified",
		"name": "simplified",
		"description": "If `true` or `1` then, the endpoint applies the\n`fields=url,pageFunctionResult,errorInfo`\n\nand `unwind=pageFunctionResult` query parameters. This feature is used\nto emulate simplified results provided by the\n\nlegacy Apify Crawler product and it's not recommended to use it in new\nintegrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"simplified": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Skip Failed Pages",
		"name": "skipFailedPages",
		"description": "If `true` or `1` then, the all the items with errorInfo property will be\nskipped from the output.\n\nThis feature is here to emulate functionality of API version 1 used for\nthe legacy Apify Crawler product and it's not recommended to use it in\nnew integrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipFailedPages": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (POST)"]
			}
		}
	},
	{
		"displayName": "GET /v2/actor-tasks/{actorTaskId}/run-sync-get-dataset-items",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Actor Task Id",
		"name": "actorTaskId",
		"required": true,
		"description": "Task ID or a tilde-separated owner's username and task's name.",
		"default": "janedoe~my-task",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Timeout",
		"name": "timeout",
		"description": "Optional timeout for the run, in seconds. By default, the run uses a\ntimeout specified in the task settings.\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"timeout": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Memory",
		"name": "memory",
		"description": "Memory limit for the run, in megabytes. The amount of memory can be set\nto a power of 2 with a minimum of 128. By default, the run uses a memory\nlimit specified in the task settings.\n",
		"default": 256,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"memory": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Max Items",
		"name": "maxItems",
		"description": "The maximum number of items that the task run should return. This is\nuseful for pay-per-result tasks, as it allows you to limit the number of\nresults that will be charged to your subscription. You can access the\nmaximum number of items in your actor by using the\n`ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.\n",
		"default": 1000,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"maxItems": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Build",
		"name": "build",
		"description": "Specifies the actor build to run. It can be either a build tag or build\nnumber. By default, the run uses the build specified in the task\nsettings (typically `latest`).\n",
		"default": "0.1.234",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"build": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Webhooks",
		"name": "webhooks",
		"description": "Specifies optional webhooks associated with the actor run, which can be\nused to receive a notification\n\ne.g. when the actor finished or failed. The value is a Base64-encoded\nJSON array of objects defining the webhooks. For more information, see\n\n[Webhooks\ndocumentation](https://docs.apify.com/platform/integrations/webhooks).\n",
		"default": "dGhpcyBpcyBqdXN0IGV4YW1wbGUK...",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"webhooks": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Format",
		"name": "format",
		"description": "Format of the results, possible values are: `json`, `jsonl`, `csv`,\n`html`, `xlsx`, `xml` and `rss`. The default value is `json`.\n",
		"default": "json",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"format": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Clean",
		"name": "clean",
		"description": "If `true` or `1` then the API endpoint returns only non-empty items and\nskips hidden fields\n\n(i.e. fields starting with the # character).\n\nThe `clean` parameter is just a shortcut for `skipHidden=true` and\n`skipEmpty=true` parameters.\n\nNote that since some objects might be skipped from the output, that the\nresult might contain less items than the `limit` value.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"clean": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of items that should be skipped at the start. The default value\nis `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of items to return. By default there is no limit.",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Fields",
		"name": "fields",
		"description": "A comma-separated list of fields which should be picked from the items,\n\nonly these fields will remain in the resulting record objects.\n\nNote that the fields in the outputted items are sorted the same way as\nthey are specified in the `fields` query parameter.\n\nYou can use this feature to effectively fix the output format.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"fields": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Omit",
		"name": "omit",
		"description": "A comma-separated list of fields which should be omitted from the items.",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"omit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Unwind",
		"name": "unwind",
		"description": "A comma-separated list of fields which should be unwound, in order which\nthey should be processed. Each field should be either an array or an object.\n\nIf the field is an array then every element of\n\nthe array will become a separate record and merged with parent object.\n\nIf the unwound field is an object then it is merged with the parent\nobject\n\nIf the unwound field is missing or its value is neither an array nor an\nobject and therefore cannot be merged with a parent object then the item\ngets preserved as it is.\n\nNote that the unwound items ignore the `desc` parameter.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"unwind": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Flatten",
		"name": "flatten",
		"description": "A comma-separated list of fields which should transform nested objects\ninto flat structures.\n\nFor example, with `flatten=\"foo\"` the object `{\"foo\":{\"bar\": \"hello\"}}`\nis turned into `{\"foo.bar\": \"hello\"}`.\n\nThe original object with properties is replaced with the flattened\nobject.\n",
		"default": "myValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"flatten": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "By default, results are returned in the same order as they were stored.\nTo reverse the order, set this parameter to `true` or `1`.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Attachment",
		"name": "attachment",
		"description": "If `true` or `1` then the response will define the `Content-Disposition:\nattachment` header, forcing a web browser to download the file rather\nthan to display it. By default this header is not present.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"attachment": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Delimiter",
		"name": "delimiter",
		"description": "A delimiter character for CSV files, only used if `format=csv`. You\nmight need to URL-encode the character (e.g. use `%09` for tab or `%3B`\nfor semicolon). The default delimiter is a simple comma (`,`).\n",
		"default": ";",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"delimiter": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Bom",
		"name": "bom",
		"description": "All text responses are encoded in UTF-8 encoding. By default, the\n`format=csv` files are prefixed with\n\nthe UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html`\nand `rss` files are not.\n\nIf you want to override this default behavior, specify `bom=1` query\nparameter to include the BOM or `bom=0` to skip it.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"bom": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Xml Root",
		"name": "xmlRoot",
		"description": "Overrides default root element name of `xml` output. By default the root\nelement is `items`.\n",
		"default": "items",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRoot": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Xml Row",
		"name": "xmlRow",
		"description": "Overrides default element name that wraps each page or page function\nresult object in `xml` output. By default the element name is `item`.\n",
		"default": "item",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Skip Header Row",
		"name": "skipHeaderRow",
		"description": "If `true` or `1` then header row in the `csv` format is skipped.",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHeaderRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Skip Hidden",
		"name": "skipHidden",
		"description": "If `true` or `1` then hidden fields are skipped from the output,\ni.e. fields starting with the `#` character.",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHidden": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Skip Empty",
		"name": "skipEmpty",
		"description": "If `true` or `1` then empty items are skipped from the output.\n\nNote that if used, the results might contain less items than the limit\nvalue.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipEmpty": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Simplified",
		"name": "simplified",
		"description": "If `true` or `1` then, the endpoint applies the\n`fields=url,pageFunctionResult,errorInfo`\n\nand `unwind=pageFunctionResult` query parameters. This feature is used\nto emulate simplified results provided by the\n\nlegacy Apify Crawler product and it's not recommended to use it in new\nintegrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"simplified": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "Skip Failed Pages",
		"name": "skipFailedPages",
		"description": "If `true` or `1` then, the all the items with errorInfo property will be\nskipped from the output.\n\nThis feature is here to emulate functionality of API version 1 used for\nthe legacy Apify Crawler product and it's not recommended to use it in\nnew integrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipFailedPages": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor tasks"],
				"operation": ["Run task synchronously and get dataset items (GET)"]
			}
		}
	},
	{
		"displayName": "GET /v2/actor-runs",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor runs"],
				"operation": ["Get user runs list"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of array elements that should be skipped at the start. The\ndefault value is `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor runs"],
				"operation": ["Get user runs list"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of array elements to return. The default value (as well\nas the maximum) is `1000`.\n",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor runs"],
				"operation": ["Get user runs list"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "If `true` or `1` then the objects are sorted by the `startedAt` field in\ndescending order. By default, they are sorted in ascending order.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor runs"],
				"operation": ["Get user runs list"]
			}
		}
	},
	{
		"displayName": "Status",
		"name": "status",
		"description": "Return only runs with the provided status ([available\nstatuses](https://docs.apify.com/platform/actors/running/runs-and-builds#lifecycle))\n",
		"default": "SUCCEEDED",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"status": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor runs"],
				"operation": ["Get user runs list"]
			}
		}
	},
	{
		"displayName": "GET /v2/actor-runs/{runId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Actor runs"],
				"operation": ["Get run"]
			}
		}
	},
	{
		"displayName": "Run Id",
		"name": "runId",
		"required": true,
		"description": "Run ID.",
		"default": "3KH8gEpp4d8uQSe8T",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Actor runs"],
				"operation": ["Get run"]
			}
		}
	},
	{
		"displayName": "Wait For Finish",
		"name": "waitForFinish",
		"description": "The maximum number of seconds the server waits for the run to finish. By\ndefault it is `0`, the maximum value is `60`. <!--\nMAX_ACTOR_JOB_ASYNC_WAIT_SECS -->\nIf the build finishes in time then the returned run object will have a terminal status (e.g. `SUCCEEDED`),\notherwise it will have a transitional status (e.g. `RUNNING`).\n",
		"default": 60,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"waitForFinish": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Actor runs"],
				"operation": ["Get run"]
			}
		}
	},
	{
		"displayName": "GET /v2/datasets",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get list of datasets"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of array elements that should be skipped at the start. The default value is `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get list of datasets"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of array elements to return. The default value as well as the maximum is `1000`.\n",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get list of datasets"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "If `true` or `1` then the objects are sorted by the `startedAt` field in\ndescending order. By default, they are sorted in ascending order.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get list of datasets"]
			}
		}
	},
	{
		"displayName": "Unnamed",
		"name": "unnamed",
		"description": "If `true` or `1` then all the datasets are returned. By default only named datasets are returned.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"unnamed": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get list of datasets"]
			}
		}
	},
	{
		"displayName": "POST /v2/datasets",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Create dataset"]
			}
		}
	},
	{
		"displayName": "Name",
		"name": "name",
		"description": "Custom unique name to easily identify the dataset in the future.",
		"default": "eshop-items",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"name": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Create dataset"]
			}
		}
	},
	{
		"displayName": "GET /v2/datasets/{datasetId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get dataset"]
			}
		}
	},
	{
		"displayName": "Dataset Id",
		"name": "datasetId",
		"required": true,
		"description": "Dataset ID or `username~dataset-name`.",
		"default": "WkzbQMuFYuamGv3YF",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get dataset"]
			}
		}
	},
	{
		"displayName": "Token",
		"name": "token",
		"description": "API authentication token. It is required only when using the `username~dataset-name` format for `datasetId`.\n",
		"default": "soSkq9ekdmfOslopH",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"token": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get dataset"]
			}
		}
	},
	{
		"displayName": "PUT /v2/datasets/{datasetId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Update dataset"]
			}
		}
	},
	{
		"displayName": "Dataset Id",
		"name": "datasetId",
		"required": true,
		"description": "Dataset ID or `username~dataset-name`.",
		"default": "WkzbQMuFYuamGv3YF",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Update dataset"]
			}
		}
	},
	{
		"required": true,
		"displayName": "Name",
		"name": "name",
		"type": "string",
		"default": "",
		"description": "",
		"routing": {
			"request": {
				"body": {
					"name": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Datasets"],
				"operation": ["Update dataset"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "{\n  \"name\": \"new-dataset-name\"\n}",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Datasets"],
				"operation": ["Update dataset"]
			}
		}
	},
	{
		"displayName": "DELETE /v2/datasets/{datasetId}",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Delete dataset"]
			}
		}
	},
	{
		"displayName": "Dataset Id",
		"name": "datasetId",
		"required": true,
		"description": "Dataset ID or `username~dataset-name`.",
		"default": "WkzbQMuFYuamGv3YF",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Delete dataset"]
			}
		}
	},
	{
		"displayName": "GET /v2/datasets/{datasetId}/items",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Dataset Id",
		"name": "datasetId",
		"required": true,
		"description": "Dataset ID or `username~dataset-name`.",
		"default": "WkzbQMuFYuamGv3YF",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Format",
		"name": "format",
		"description": "Format of the results, possible values are: `json`, `jsonl`, `csv`, `html`, `xlsx`, `xml` and `rss`. The default value is `json`.\n",
		"default": "json",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"format": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Clean",
		"name": "clean",
		"description": "If `true` or `1` then the API endpoint returns only non-empty items and skips hidden fields (i.e. fields starting with the # character).\nThe `clean` parameter is just a shortcut for `skipHidden=true` and `skipEmpty=true` parameters.\nNote that since some objects might be skipped from the output, that the result might contain less items than the `limit` value.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"clean": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Offset",
		"name": "offset",
		"description": "Number of items that should be skipped at the start. The default value is `0`.\n",
		"default": 0,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"offset": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Limit",
		"name": "limit",
		"description": "Maximum number of items to return. By default there is no limit.",
		"default": 99,
		"type": "number",
		"routing": {
			"request": {
				"qs": {
					"limit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Fields",
		"name": "fields",
		"description": "A comma-separated list of fields which should be picked from the items, only these fields will remain in the resulting record objects.\nNote that the fields in the outputted items are sorted the same way as they are specified in the `fields` query parameter.\nYou can use this feature to effectively fix the output format.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"fields": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Omit",
		"name": "omit",
		"description": "A comma-separated list of fields which should be omitted from the items.",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"omit": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Unwind",
		"name": "unwind",
		"description": "A comma-separated list of fields which should be unwound, in order which they should be processed. Each field should be either an array or an object.\nIf the field is an array then every element of the array will become a separate record and merged with parent object.\nIf the unwound field is an object then it is merged with the parent object.\nIf the unwound field is missing or its value is neither an array nor an object and therefore cannot be merged with a parent object then the item gets preserved as it is.\nNote that the unwound items ignore the `desc` parameter.\n",
		"default": "myValue,myOtherValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"unwind": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Flatten",
		"name": "flatten",
		"description": "A comma-separated list of fields which should transform nested objects into flat structures.\n\nFor example, with `flatten=\"foo\"` the object `{\"foo\":{\"bar\": \"hello\"}}` is turned into `{\"foo.bar\": \"hello\"}`.\n\nThe original object with properties is replaced with the flattened object.\n",
		"default": "myValue",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"flatten": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Desc",
		"name": "desc",
		"description": "By default, results are returned in the same order as they were stored.\nTo reverse the order, set this parameter to `true` or `1`.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"desc": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Attachment",
		"name": "attachment",
		"description": "If `true` or `1` then the response will define the `Content-Disposition:\nattachment` header, forcing a web browser to download the file rather\nthan to display it. By default this header is not present.\n",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"attachment": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Delimiter",
		"name": "delimiter",
		"description": "A delimiter character for CSV files, only used if `format=csv`. You\nmight need to URL-encode the character (e.g. use `%09` for tab or `%3B`\nfor semicolon). The default delimiter is a simple comma (`,`).\n",
		"default": ";",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"delimiter": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Bom",
		"name": "bom",
		"description": "All text responses are encoded in UTF-8 encoding. By default, the\n`format=csv` files are prefixed with the UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html` and `rss` files are not.\n\nIf you want to override this default behavior, specify `bom=1` query parameter to include the BOM or `bom=0` to skip it.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"bom": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Xml Root",
		"name": "xmlRoot",
		"description": "Overrides default root element name of `xml` output. By default the root element is `items`.\n",
		"default": "items",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRoot": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Xml Row",
		"name": "xmlRow",
		"description": "Overrides default element name that wraps each page or page function result object in `xml` output. By default the element name is `item`.\n",
		"default": "item",
		"type": "string",
		"routing": {
			"request": {
				"qs": {
					"xmlRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Skip Header Row",
		"name": "skipHeaderRow",
		"description": "If `true` or `1` then header row in the `csv` format is skipped.",
		"default": true,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHeaderRow": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Skip Hidden",
		"name": "skipHidden",
		"description": "If `true` or `1` then hidden fields are skipped from the output, i.e. fields starting with the `#` character.",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipHidden": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Skip Empty",
		"name": "skipEmpty",
		"description": "If `true` or `1` then empty items are skipped from the output.\n\nNote that if used, the results might contain less items than the limit value.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipEmpty": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Simplified",
		"name": "simplified",
		"description": "If `true` or `1` then, the endpoint applies the `fields=url,pageFunctionResult,errorInfo`\nand `unwind=pageFunctionResult` query parameters. This feature is used to emulate simplified results provided by the\nlegacy Apify Crawler product and it's not recommended to use it in new integrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"simplified": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "Skip Failed Pages",
		"name": "skipFailedPages",
		"description": "If `true` or `1` then, the all the items with errorInfo property will be skipped from the output.\n\nThis feature is here to emulate functionality of API version 1 used for the legacy Apify Crawler product and it's not recommended to use it in new integrations.\n",
		"default": false,
		"type": "boolean",
		"routing": {
			"request": {
				"qs": {
					"skipFailedPages": "={{ $value }}"
				}
			}
		},
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Get items"]
			}
		}
	},
	{
		"displayName": "POST /v2/datasets/{datasetId}/items",
		"name": "operation",
		"type": "notice",
		"typeOptions": {
			"theme": "info"
		},
		"default": "",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Put items"]
			}
		}
	},
	{
		"displayName": "Dataset Id",
		"name": "datasetId",
		"required": true,
		"description": "Dataset ID or `username~dataset-name`.",
		"default": "WkzbQMuFYuamGv3YF",
		"type": "string",
		"displayOptions": {
			"show": {
				"resource": ["Datasets"],
				"operation": ["Put items"]
			}
		}
	},
	{
		"displayName": "Body",
		"name": "body",
		"type": "fixedCollection",
		"default": {},
		"description": "",
		"options": [
			{
				"name": "items",
				"displayName": "Items",
				"values": [
					{
						"type": "string",
						"default": "",
						"description": "",
						"name": "foo",
						"displayName": "Foo"
					}
				]
			}
		],
		"routing": {
			"request": {
				"body": "={{ JSON.parse($value) }}"
			}
		},
		"displayOptions": {
			"hide": {
				"useCustomBody": [true]
			},
			"show": {
				"resource": ["Datasets"],
				"operation": ["Put items"]
			}
		}
	},
	{
		"displayName": "Custom Body",
		"name": "customBody",
		"type": "json",
		"default": "[\n  {\n    \"foo\": \"bar\"\n  },\n  {\n    \"foo\": \"hotel\"\n  },\n  {\n    \"foo\": \"restaurant\"\n  }\n]",
		"description": "Custom body to send",
		"routing": {
			"request": {
				"body": {
					"customBody": "={{JSON.parse($value)}}"
				}
			},
			"send": {
				"preSend": ["${helpers.hooks.preSendActionCustonBody}"]
			}
		},
		"displayOptions": {
			"show": {
				"useCustomBody": [true],
				"resource": ["Datasets"],
				"operation": ["Put items"]
			}
		}
	}
]
