name: Release & Publish Apify n8n Node

on:
  release:
    types: [published]

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.APIFY_SERVICE_ACCOUNT_GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node.js & cache pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Run tests
        run: pnpm test

      - name: Configure Git
        run: |
          git config --global user.name "Apify Release Bot"
          git config --global user.email "noreply@apify.com"

      - name: Extract release version
        id: get_version
        run: |
          FULL_TAG_NAME="${{ github.event.release.tag_name }}"
          VERSION_NUMBER="${FULL_TAG_NAME#v}"
          echo "VERSION=${VERSION_NUMBER}" >> $GITHUB_ENV

      - name: Update package.json version
        run: |
          echo "Updating package.json to version ${{ env.VERSION }}"
          pnpm version ${{ env.VERSION }} --no-git-tag-version

      - name: Commit version update
        run: |
          git add package.json pnpm-lock.yaml
          if ! git diff --staged --quiet; then
            TARGET_BRANCH="${{ github.event.release.target_commitish }}"
            echo "Target branch for push: $TARGET_BRANCH"
            git commit -m "chore(release): set version to ${{ env.VERSION }} [skip ci]"
            echo "Pushing version update to branch: $TARGET_BRANCH"
            git push origin HEAD:"refs/heads/$TARGET_BRANCH"
          else
            echo "No changes to commit in package.json or pnpm-lock.yaml for version update."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.APIFY_SERVICE_ACCOUNT_GITHUB_TOKEN }}

      - name: Set up npm for publishing
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.APIFY_SERVICE_ACCOUNT_NPM_TOKEN }}" > .npmrc

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.APIFY_SERVICE_ACCOUNT_NPM_TOKEN }}
        run: |
          if pnpm view @apify/n8n-nodes-apify-content-crawler@${{ env.VERSION }} version > /dev/null 2>&1; then
            echo "Version ${{ env.VERSION }} of @apify/n8n-nodes-apify-content-crawler is already published to npm. Skipping publish step."
          else
            echo "Publishing @apify/n8n-nodes-apify-content-crawler@${{ env.VERSION }} to npm..."
            pnpm publish --access public --no-git-checks
          fi

      # ✅ New step: Post-publish Marketplace compliance check
      - name: Run n8n Community Package Scan
        run: |
          echo "📦 @apify/n8n-nodes-apify-content-crawler@${{ env.VERSION }} has been published to npm."
          echo "🔍 Running n8n Marketplace compliance scan..."
          npx @n8n/scan-community-package @apify/n8n-nodes-apify-content-crawler || (
            echo "❌ Scan failed — but note: the package has already been released to npm."
            exit 1
          )
